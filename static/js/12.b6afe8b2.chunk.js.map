{"version":3,"sources":["pages/UserLayout/Profile/ProfileAvatar.tsx","pages/UserLayout/Profile/About.tsx","pages/UserLayout/Profile/index.tsx","hooks/useToggle.tsx"],"names":["CropperModal","file","useToggle","show","handleClose","handleOpen","React","useEffect","placement","visible","closable","onClose","getContainer","style","position","bodyStyle","padding","overflowY","destroyOnClose","mask","maskClosable","className","right","backgroundColor","zIndex","onClick","shape","marginRight","console","log","type","flex","width","CropComponent","cropperRef","useRef","top","left","height","aspectRatio","preview","guides","src","crop","imageElement","current","cropper","ref","viewMode","dragMode","cropBoxMovable","ProfileAvatar","fileRef","useState","selectedFile","setSelectedFile","Fragment","name","hidden","onChange","e","files","preventDefault","dataTransfer","target","reader","FileReader","onload","result","readAsDataURL","accept","click","alt","initialValues","username","phone","bio","city","country","About","layout","onFinish","values","autoComplete","marginBottom","gutter","span","Item","label","rules","required","message","min","max","addonBefore","TextArea","showCount","maxLength","justifyContent","htmlType","size","Title","Typography","Text","TabPane","Tabs","Profile","id","backgroundImage","level","marginTop","defaultActiveKey","centered","tab","initial","setShow","handleToggle","prev"],"mappings":"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","file":"static/js/12.b6afe8b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Drawer, Button } from 'antd';\r\nimport useToggle from '../../../hooks/useToggle';\r\nimport Cropper from \"react-cropper\";\r\n\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nconst ProfileAvatar = () => {\r\n    const fileRef = React.useRef<HTMLInputElement>(null);\r\n    const [selectedFile, setSelectedFile] = React.useState<string>();\r\n\r\n    function clickHandler() {\r\n        if (fileRef.current)\r\n            fileRef.current.click();\r\n    }\r\n\r\n    function changeHandler(e: any) {\r\n        e.preventDefault();\r\n        let files;\r\n        if (e.dataTransfer) {\r\n            files = e.dataTransfer.files;\r\n        } else if (e.target) {\r\n            files = e.target.files;\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            setSelectedFile(reader.result as any);\r\n        };\r\n        reader.readAsDataURL(files[0]);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <input type=\"file\" name=\"myfile\" hidden ref={fileRef} onChange={changeHandler}\r\n                accept=\"image/jpeg\" />\r\n            <div className=\"profile__avatar\" onClick={clickHandler}>\r\n                <img src=\"/chatup/img/avatar.jpg\" alt=\"profile_avatar\" />\r\n            </div>\r\n            <CropperModal file={selectedFile} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst CropperModal = ({ file }: { file: any }) => {\r\n    const { show, handleClose, handleOpen } = useToggle();\r\n\r\n    React.useEffect(() => {\r\n        if (file) {\r\n            handleOpen();\r\n        }\r\n    }, [file]);\r\n\r\n    function handleOk() {\r\n        console.log(\"clicked\")\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            placement=\"right\"\r\n            visible={show}\r\n            closable={false}\r\n            onClose={handleClose}\r\n            getContainer={false}\r\n            style={{ position: 'absolute' }}\r\n            bodyStyle={{padding: 0, overflowY: 'hidden'}}\r\n            destroyOnClose={true}\r\n            mask={false}\r\n            maskClosable={false}\r\n        >\r\n            <div className=\"d__flex flex__column h__100\">\r\n                <div className=\"p__16\" \r\n                style={{ position: 'absolute', right: '1rem', backgroundColor: 'transparent', zIndex: 999999}}>\r\n                    <Button onClick={handleClose} shape=\"round\" style={{marginRight: '0.5rem'}}>Cancel</Button>\r\n                    <Button onClick={handleOk} shape=\"round\" type='primary'>\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n                <div style={{ position: 'relative', flex: 1, width: '100%'}}>\r\n                    <CropComponent file={file} />\r\n                </div>\r\n            </div>\r\n           \r\n        </Drawer>\r\n    )\r\n};\r\n\r\nconst CropComponent = ({ file }: { file: string }) => {\r\n    const cropperRef = React.useRef<HTMLImageElement>(null);\r\n\r\n    const onCrop = () => {\r\n        const imageElement: any = cropperRef?.current;\r\n        const cropper: any = imageElement?.cropper;\r\n        // console.log(cropper.getCroppedCanvas().toDataURL());\r\n    };\r\n\r\n    return (\r\n        <Cropper\r\n            style={{ position: 'absolute', top: 0, left: 0, height: '100%', width: '100%' }}\r\n            aspectRatio={4 / 3}\r\n            preview=\".img-preview\"\r\n            guides={false}\r\n            src={file}\r\n            crop={onCrop}\r\n            ref={cropperRef}\r\n            viewMode={1}\r\n            dragMode=\"move\"\r\n            cropBoxMovable={false}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProfileAvatar;","import React from 'react';\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\n\r\nconst initialValues = {\r\n    username: '',\r\n    phone: '',\r\n    bio: '',\r\n    city: '',\r\n    country: ''\r\n};\r\n\r\nconst About = () => {\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"aboutForm\"\r\n                layout=\"vertical\"\r\n                initialValues={initialValues}\r\n                onFinish={onFinish}\r\n                autoComplete=\"off\"\r\n                style={{ width: '100%' }}\r\n            >\r\n                <div className=\"p__16\" style={{ marginBottom: '64px'}}>\r\n                    <Row gutter={[16, 0]}>\r\n                        <Col span={12}>\r\n                            <Form.Item\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                rules={[{ required: true, message: 'Please input your username!' }]}\r\n                            >\r\n                                <Input type=\"text\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item\r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                rules={[\r\n                                    { required: true, message: 'Please input your phone!' },\r\n                                    { min: 8, max: 8, message: 'Phone should has 8 digits' }\r\n                                ]}\r\n                            >\r\n                                <Input min=\"0\" type=\"number\" addonBefore=\"+216\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row gutter={[16, 0]}>\r\n                        <Col span={12}>\r\n                            <Form.Item\r\n                                label=\"City\"\r\n                                name=\"city\"\r\n                                rules={[{ required: true, message: 'Please input your city!' }]}\r\n                            >\r\n                                <Input type=\"text\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item\r\n                                label=\"Country\"\r\n                                name=\"country\"\r\n                                rules={[{ required: true, message: 'Please input your country!' }]}\r\n                            >\r\n                                <Input type=\"text\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Item\r\n                        name=\"Bio\"\r\n                        label=\"bio\"\r\n                        rules={[{ required: true, message: 'Please input Bio' }]}\r\n                    >\r\n                        <Input.TextArea showCount maxLength={100} />\r\n                    </Form.Item>\r\n                </div>\r\n\r\n\r\n                <div className=\"bg__lighten__green bottom__footer d__flex align__item__center p__16\"\r\n                style={{justifyContent: 'flex-end'}}>\r\n\r\n                    <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" size=\"large\">\r\n                       Save\r\n                    </Button>\r\n\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport ProfileAvatar from './ProfileAvatar';\r\nimport { Typography, Tabs } from 'antd';\r\n\r\nimport './profile.less';\r\nimport About from './About';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { TabPane } = Tabs;\r\nconst Background = \"/chatup/img/cover.jpg\";\r\n\r\nconst Profile = () => {\r\n    console.log(\"profile component\")\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"bg__white shadow__sm w__100 content__top__radius content__top__radius no__sm__radius\" id=\"profile\">\r\n                <div className=\"bg__cover\" style={{ backgroundImage: `url(${Background})` }} />\r\n                <ProfileAvatar />\r\n\r\n                <div className=\"user__details d__flex flex__column justify__content__center align__item__center w__100\">\r\n                    <Title level={5} className=\"m__0\">Nidhal Bettaibi</Title>\r\n                    <Text type=\"secondary\">Kasserine, Tunisia</Text>\r\n                    <div className=\"d__flex align__item__center justify__content__center row__gap\" style={{ marginTop: '0.5rem' }}>\r\n                        <div>\r\n                            <Title level={5} className=\"m__0\">200k</Title>\r\n                            <Text type=\"secondary\">FOLLOWERS</Text>\r\n                        </div>\r\n                        <div>\r\n                            <Title level={5} className=\"m__0\">1.2k</Title>\r\n                            <Text type=\"secondary\">FOLLOWING</Text>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Tabs defaultActiveKey=\"1\" centered>\r\n                    <TabPane tab=\"About\" key=\"1\">\r\n                        <About />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Followers\" key=\"2\">\r\n                        Content of Tab Pane 2\r\n                    </TabPane>\r\n                    <TabPane tab=\"Following\" key=\"3\">\r\n                        Content of Tab Pane 3\r\n                    </TabPane>\r\n                    <TabPane tab=\"My Shorts\" key=\"4\">\r\n                        Content of Tab Pane 3\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { useState } from 'react';\r\n\r\nconst useToggle = (initial?: boolean) => {\r\n    const [show, setShow] = useState<boolean>(initial || false);\r\n\r\n    function handleOpen() {\r\n        setShow(true);\r\n    }\r\n\r\n    function handleClose() {\r\n        setShow(false);\r\n    }\r\n\r\n    function handleToggle() {\r\n        setShow(prev => !prev);\r\n    }\r\n\r\n    return {\r\n        show,\r\n        handleOpen,\r\n        handleClose,\r\n        handleToggle\r\n    };\r\n\r\n};\r\n\r\nexport default useToggle;"],"sourceRoot":""}