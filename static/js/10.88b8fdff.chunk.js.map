{"version":3,"sources":["hooks/useBreakpoint.tsx","models/navigations.model.tsx","components/Sidebar/Navigation.tsx","components/Sidebar/mobile/MobileSidebarContent.tsx","components/Sidebar/mobile/MobileSidebar.tsx","components/Sidebar/index.tsx","pages/UserLayout/index.tsx"],"names":["useBreakpoint","React","useState","breakpoint","setBreakpoint","useEffect","window","addEventListener","computeInnerWidth","removeEventListener","bk","getDeviceConfig","innerWidth","throttle","width","navigations","icon","UserOutlined","title","path","route","MessageOutlined","WhatsAppOutlined","AliwangwangOutlined","NotificationOutlined","SettingOutlined","Navigation","item","isActive","useParams","to","className","Navigations","style","flex","map","index","MobileNavigation","closeSidebar","current","classname","onClick","MobileSidebarContent","closeHandler","useCallback","setTimeout","clearTimeout","role","LogoutOutlined","Initial","spring","type","damping","stiffness","MobileSidebar","x","useMotionValue","controls","useAnimation","input","opacity","useTransform","zIndex","backgroundColor","get","start","Fragment","motion","div","onTap","transition","duration","animate","whileTap","scale","onPan","e","pointInfo","stopPropagation","offset","diff","Math","abs","set","panHandler","onPanEnd","Sidebar","Shorts","lazy","Settings","Chat","Notifications","Profile","Calls","Content","Layout","UserLayout","gap","minHeight","fallback","element"],"mappings":"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","file":"static/js/10.88b8fdff.chunk.js","sourcesContent":["import React from 'react';\r\nimport throttle from 'lodash.throttle';\r\n\r\ntype Breakpoints = 'xs' | 'sm' | 'md' | 'lg' | '';\r\n\r\nfunction useBreakpoint() {\r\n    const [breakpoint, setBreakpoint] = React.useState<Breakpoints>('');\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener('resize', computeInnerWidth);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', computeInnerWidth);\r\n        };\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        const bk = getDeviceConfig(window.innerWidth);\r\n        setBreakpoint(bk as Breakpoints);\r\n    }, []);\r\n\r\n    const computeInnerWidth = throttle(function () {\r\n        const bk = getDeviceConfig(window.innerWidth);\r\n        setBreakpoint(bk as Breakpoints);\r\n    }, 200);\r\n\r\n    function getDeviceConfig(width: number): string {\r\n\r\n        switch (true) {\r\n            case (width < 576): return \"xs\";\r\n            case (width >= 576 && width <= 768): return \"sm\";\r\n            case (width > 768 && width <= 992) : return \"md\";\r\n            case (width > 992): return \"lg\";\r\n            default: return '';\r\n        }\r\n    }\r\n\r\n    return {\r\n        breakpoint\r\n    }\r\n}\r\n\r\nexport default useBreakpoint;","import { \r\n    AliwangwangOutlined, \r\n    SettingOutlined, \r\n    WhatsAppOutlined, \r\n    NotificationOutlined, \r\n    UserOutlined, \r\n    MessageOutlined\r\n} from '@ant-design/icons';\r\n\r\nexport const navigations = [\r\n    {\r\n        icon: <UserOutlined />,\r\n        title: 'My Profile',\r\n        path: '/chatup/profile',\r\n        route: 'profile'\r\n    },\r\n    {\r\n        icon: <MessageOutlined />,\r\n        title: 'Conversations',\r\n        path: '/chatup',\r\n        route: ''\r\n    },\r\n    {\r\n        icon: <WhatsAppOutlined />,\r\n        title: 'Calls History',\r\n        path: '/chatup/calls',\r\n        route: 'calls'\r\n    },\r\n    {\r\n        icon: <AliwangwangOutlined />,\r\n        title: 'Shorts',\r\n        path: '/chatup/shorts',\r\n        route: 'shorts'\r\n    },\r\n    {\r\n        icon: <NotificationOutlined />,\r\n        title: 'Notifications',\r\n        path: '/chatup/notifications',\r\n        route: 'notifications'\r\n    },\r\n    {\r\n        icon: <SettingOutlined />,\r\n        title: 'Settings',\r\n        path: '/chatup/settings',\r\n        route: 'settings'\r\n    },\r\n];","import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Tooltip } from 'antd';\r\nimport { navigations } from '../../models/navigations.model';\r\nimport \"./sidebar.less\";\r\n\r\n\r\nconst Navigations = () => {\r\n\r\n    return (\r\n        <ul style={{flex:1}}>\r\n            {\r\n                navigations.map((item, index) => (\r\n                    <Navigation key={index} item={item} />\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst Navigation = ({ item }: { item: any }) => {\r\n\r\n    const params = useParams();\r\n    const current = params['*'];\r\n    const isActive = current === item.route;\r\n\r\n    return (\r\n        <li>\r\n            <Tooltip title={item.title}>\r\n                <Link to={item.path} className={`${isActive ? 'shadow__sm active': ''}`}>\r\n                    <span>{item.icon}</span>\r\n                </Link>\r\n            </Tooltip>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default Navigations;","import React from 'react';\r\nimport { navigations } from '../../../models/navigations.model';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\n\r\nconst MobileSidebarContent = ({closeHandler}: {closeHandler: ()=> void}) => {\r\n\r\n    const closeSidebar = React.useCallback(() => {\r\n        setTimeout(() =>{\r\n            closeHandler();\r\n            clearTimeout(this);\r\n        },500);\r\n    }, []);\r\n\r\n    return (\r\n        <ul>\r\n            {\r\n                navigations.map((item, index) => (\r\n                    <MobileNavigation key={index} item={item} closeSidebar = {closeSidebar} />\r\n                ))\r\n            }\r\n            <li>\r\n                <a role=\"button\">\r\n                    <span className=\"icon\">\r\n                        <LogoutOutlined />\r\n                    </span>\r\n                </a>\r\n                <h5>Sign out</h5>\r\n            </li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nconst MobileNavigation = ({ item, closeSidebar}: { item: any, closeSidebar: () => void }) => {\r\n    const params = useParams();\r\n    const current = params['*'];\r\n    const classname = `${current === item.route ? 'active' : ''}`;\r\n\r\n    return (\r\n        <li>\r\n            <Link to={item.path} className={classname} onClick={closeSidebar}>\r\n                <span className=\"icon\">{item.icon}</span>\r\n            </Link>\r\n            <h5>{item.title}</h5>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default MobileSidebarContent;","import React from 'react';\r\nimport { motion, useMotionValue, useAnimation, useTransform } from 'framer-motion';\r\nimport MobileSidebarContent from './MobileSidebarContent';\r\n\r\nimport \"./mobileSidebar.less\";\r\n\r\nconst Initial = 174;\r\n\r\nconst spring = {\r\n    type: \"spring\",\r\n    damping: 10,\r\n    stiffness: 100\r\n};\r\n\r\nconst MobileSidebar = () => {\r\n    const x = useMotionValue(Initial);\r\n    const controls = useAnimation();\r\n    const input = [Initial, 0];\r\n    const opacity = useTransform(x, input, [0, 1]);\r\n    const zIndex = useTransform(x, input, [-2, 88888]);\r\n    const backgroundColor = useTransform(x, input, ['#1DA57A', 'rgba(255, 255, 255, 0.6)']);\r\n\r\n    function panHandler(e: any, pointInfo: any) {\r\n        e.stopPropagation();\r\n        if (pointInfo.offset.x < 0) {\r\n            const diff = Initial - Math.abs(pointInfo.offset.x);\r\n            if (x.get() <= 0) {\r\n                x.set(0);\r\n                return;\r\n            }\r\n            else {\r\n                x.set(diff)\r\n            }\r\n        }\r\n        if (pointInfo.offset.x > 0) {\r\n            const diff = pointInfo.offset.x - Initial;\r\n\r\n            if (x.get() >= (Initial - 10)) {\r\n                return;\r\n            }\r\n\r\n            if (diff < 0) {\r\n                x.set(Initial + diff);\r\n                return;\r\n            }\r\n\r\n            if (diff > 0 && diff < Initial) {\r\n                x.set(diff);\r\n            }\r\n        }\r\n    }\r\n\r\n    function panEndHandler(pointInfo: any) {\r\n        if (x.get() > 100) {\r\n            controls.start({\r\n                x: Initial\r\n            });\r\n        }\r\n        else {\r\n            controls.start({\r\n                x: 0\r\n            });\r\n        }\r\n    }\r\n\r\n    const closeHandler = React.useCallback(() => {\r\n        if (x.get() === 0) {\r\n            controls.start({\r\n                x: Initial\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <motion.div className=\"mobile__sidebar bg__gredient\"\r\n                style={{ opacity, zIndex }}\r\n                onTap={() => closeHandler()} />\r\n\r\n            <motion.div className='draggable'\r\n                style={{ x }}\r\n                transition={{ spring, duration: 0.5 }}\r\n                animate={controls}>\r\n\r\n                <motion.div className=\"handler__container\"\r\n                whileTap={{ scale: 1.12 }}\r\n                onPan={(e, pointInfo) => panHandler(e, pointInfo)}\r\n                onPanEnd={(e, pointInfo) => panEndHandler(pointInfo)}>\r\n                    <motion.div className=\"handler\"\r\n                        style={{ backgroundColor }} />\r\n                </motion.div>\r\n\r\n                <div className=\"mobile__sidebar__content scrollabe\">\r\n                    <MobileSidebarContent closeHandler={closeHandler} />\r\n                </div>\r\n\r\n            </motion.div>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default MobileSidebar;","import React from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\n\r\nimport Navigations from './Navigation';\r\nimport useBreakpoint from '../../hooks/useBreakpoint';\r\nimport MobileSidebar from './mobile/MobileSidebar';\r\n\r\nconst Sidebar = () => {\r\n    const { breakpoint } = useBreakpoint();\r\n\r\n    return (\r\n        <>\r\n            {(breakpoint === 'md' || breakpoint === 'lg') ?\r\n                <div className=\"sidebar scrollabe d__flex flex__column align__item__center\">\r\n\r\n                    <Navigations />\r\n\r\n\r\n                    <div className=\"d__flex flex__column align__item__center w__100\">\r\n                        <Tooltip title=\"Sign out\">\r\n                            <a role=\"button\" className=\"shadow__sm signout__btn\">\r\n                                <span>\r\n                                    <LogoutOutlined />\r\n                                </span>\r\n                            </a>\r\n                        </Tooltip>\r\n                    </div>\r\n\r\n                </div> :\r\n                <MobileSidebar />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import { lazy, Suspense } from 'react';\r\nimport { Layout } from 'antd';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport Sidebar from '../../components/Sidebar';\r\n\r\nconst Shorts = lazy(() => import('./Shorts'));\r\nconst Settings = lazy(() => import('./Settings'));\r\nconst Chat = lazy(() => import('./Chat'));\r\nconst Notifications = lazy(() => import('./Notifications'));\r\nconst Profile = lazy(() => import('./Profile'));\r\nconst Calls = lazy(() => import('./Calls'));\r\n\r\nconst { Content } = Layout;\r\n\r\nconst UserLayout = () => {\r\n\r\n    return (\r\n        <div className=\"bg__gredient p__sm__16 d__flex flex__row\" style={{gap: '1rem', minHeight: '100vh'}}>\r\n            <Sidebar />\r\n\r\n            <Content className=\"main__content scrollabe bg__white\">\r\n                    {/* Something static here */}\r\n                    <Suspense fallback={<span>inner loading...</span>}>\r\n                        <Routes>\r\n                            <Route path=\"/\" element={<Chat />} />\r\n                            <Route path=\"/profile\" element={<Profile />} />\r\n                            <Route path=\"/settings\" element={<Settings />} />\r\n                            <Route path=\"/notifications\" element={<Notifications />} />\r\n                            <Route path=\"/shorts\" element={<Shorts />} />\r\n                            <Route path=\"/calls\" element={<Calls />} />\r\n                        </Routes>\r\n                    </Suspense>\r\n            </Content>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserLayout;"],"sourceRoot":""}