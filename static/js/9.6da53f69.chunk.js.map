{"version":3,"sources":["pages/UserLayout/Profile/ProfileAvatar.tsx","pages/UserLayout/Profile/About.tsx","pages/UserLayout/Profile/index.tsx","hooks/useToggle.tsx"],"names":["CropperModal","file","useToggle","show","handleClose","handleOpen","React","useEffect","console","log","visible","onOk","onCancel","mask","maskClosable","okText","closable","bodyStyle","padding","position","minHeight","minWidth","CropComponent","memo","cropperRef","useRef","style","top","left","height","width","aspectRatio","preview","guides","src","crop","imageElement","current","cropper","ref","viewMode","dragMode","cropBoxMovable","ProfileAvatar","fileRef","useState","selectedFile","setSelectedFile","Fragment","type","name","hidden","onChange","e","files","preventDefault","dataTransfer","target","reader","FileReader","onload","result","readAsDataURL","accept","className","onClick","click","alt","initialValues","username","phone","bio","city","country","About","layout","onFinish","values","autoComplete","gutter","span","Item","label","rules","required","message","min","max","addonBefore","TextArea","showCount","maxLength","textAlign","htmlType","shape","size","Title","Typography","Text","TabPane","Tabs","Profile","id","backgroundImage","level","marginTop","defaultActiveKey","centered","tab","initial","setShow","handleToggle","prev"],"mappings":"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","file":"static/js/9.6da53f69.chunk.js","sourcesContent":["import React, { ChangeEvent, } from 'react';\r\nimport { Modal } from 'antd';\r\nimport useToggle from '../../../hooks/useToggle';\r\nimport Cropper from \"react-cropper\";\r\n\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nconst ProfileAvatar = () => {\r\n    const fileRef = React.useRef<HTMLInputElement>(null);\r\n    const [selectedFile, setSelectedFile] = React.useState<string>();\r\n\r\n    function clickHandler() {\r\n        if (fileRef.current)\r\n            fileRef.current.click();\r\n    }\r\n\r\n    function changeHandler(e: any) {\r\n        e.preventDefault();\r\n        let files;\r\n        if (e.dataTransfer) {\r\n          files = e.dataTransfer.files;\r\n        } else if (e.target) {\r\n          files = e.target.files;\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          setSelectedFile(reader.result as any);\r\n        };\r\n        reader.readAsDataURL(files[0]);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <input type=\"file\" name=\"myfile\" hidden ref={fileRef} onChange={changeHandler}\r\n                accept=\"image/jpeg\" />\r\n            <div className=\"profile__avatar\" onClick={clickHandler}>\r\n                <img src=\"/chatup/img/avatar.jpg\" alt=\"profile_avatar\" />\r\n            </div>\r\n            <CropperModal file={selectedFile} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst CropperModal = ({ file }: { file: any }) => {\r\n    const { show, handleClose, handleOpen } = useToggle();\r\n\r\n    React.useEffect(() => {\r\n        if (file) {\r\n            handleOpen();\r\n        }\r\n    }, [file]);\r\n\r\n    function handleOk() {\r\n        console.log(\"clicked\")\r\n    }\r\n    console.log(\"rerender\")\r\n\r\n    return (\r\n        <Modal visible={show} onOk={handleOk}\r\n            onCancel={handleClose} mask={false} maskClosable={false} okText=\"Save\"\r\n            closable={false} bodyStyle={{ padding: '0', position: 'relative', minHeight: '300px', minWidth: '300px' }}>\r\n\r\n            <CropComponent file = {file} />\r\n\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst CropComponent = React.memo(({file}:{file: string}) => {\r\n    const cropperRef = React.useRef<HTMLImageElement>(null);\r\n\r\n    const onCrop = () => {\r\n        const imageElement: any = cropperRef?.current;\r\n        const cropper: any = imageElement?.cropper;\r\n        // console.log(cropper.getCroppedCanvas().toDataURL());\r\n    };\r\n\r\n    return (\r\n        <Cropper\r\n            style={{position:'absolute', top:'0', left:0, height: '100%', width: '100%' }}\r\n            aspectRatio={4 / 3}\r\n            preview=\".img-preview\"\r\n            guides={false}\r\n            src={file}\r\n            crop={onCrop}\r\n            ref={cropperRef}\r\n            viewMode={1}\r\n            dragMode=\"move\"\r\n            cropBoxMovable={false}\r\n        />\r\n    )\r\n})\r\n\r\nexport default ProfileAvatar;","import React from 'react';\r\nimport { Form, Input, Button, Row, Col, Typography } from 'antd';\r\n\r\nconst initialValues = {\r\n    username: '',\r\n    phone: '',\r\n    bio: '',\r\n    city: '',\r\n    country: ''\r\n};\r\n\r\nconst About = () => {\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n    };\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"aboutForm\"\r\n                layout=\"vertical\"\r\n                initialValues={initialValues}\r\n                onFinish={onFinish}\r\n                autoComplete=\"off\"\r\n                style={{ width: '100%' }}\r\n            >\r\n                <div className=\"p__16\">\r\n                    <Row gutter={[16, 0]}>\r\n                        <Col span={12}>\r\n                            <Form.Item\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                rules={[{ required: true, message: 'Please input your username!' }]}\r\n                            >\r\n                                <Input type=\"text\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item\r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                rules={[\r\n                                    { required: true, message: 'Please input your phone!' },\r\n                                    { min: 8, max: 8, message: 'Phone should has 8 digits' }\r\n                                ]}\r\n                            >\r\n                                <Input min=\"0\" type=\"number\" addonBefore=\"+216\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row gutter={[16, 0]}>\r\n                        <Col span={12}>\r\n                            <Form.Item\r\n                                label=\"City\"\r\n                                name=\"city\"\r\n                                rules={[{ required: true, message: 'Please input your city!' }]}\r\n                            >\r\n                                <Input type=\"text\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item\r\n                                label=\"Country\"\r\n                                name=\"country\"\r\n                                rules={[{ required: true, message: 'Please input your country!' }]}\r\n                            >\r\n                                <Input type=\"text\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Item\r\n                        name=\"Bio\"\r\n                        label=\"bio\"\r\n                        rules={[{ required: true, message: 'Please input Bio' }]}\r\n                    >\r\n                        <Input.TextArea showCount maxLength={100} />\r\n                    </Form.Item>\r\n                </div>\r\n\r\n\r\n                <div className=\"p__16 bg__lighten__green\" style={{textAlign: 'right' }}>\r\n\r\n                    <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" size=\"large\">\r\n                       Save\r\n                    </Button>\r\n\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport ProfileAvatar from './ProfileAvatar';\r\nimport { Typography, Tabs } from 'antd';\r\n\r\nimport './profile.less';\r\nimport About from './About';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { TabPane } = Tabs;\r\nconst Background = \"/chatup/img/cover.jpg\";\r\n\r\nconst Profile = () => {\r\n    console.log(\"profile component\")\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"bg__white shadow__sm w__100 content__top__radius content__top__radius\" id=\"profile\">\r\n                <div className=\"bg__cover\" style={{ backgroundImage: `url(${Background})` }} />\r\n                <ProfileAvatar />\r\n\r\n                <div className=\"user__details d__flex flex__column justify__content__center align__item__center w__100\">\r\n                    <Title level={5} className=\"m__0\">Nidhal Bettaibi</Title>\r\n                    <Text type=\"secondary\">Kasserine, Tunisia</Text>\r\n                    <div className=\"d__flex align__item__center justify__content__center row__gap\" style={{ marginTop: '0.5rem' }}>\r\n                        <div>\r\n                            <Title level={5} className=\"m__0\">200k</Title>\r\n                            <Text type=\"secondary\">FOLLOWERS</Text>\r\n                        </div>\r\n                        <div>\r\n                            <Title level={5} className=\"m__0\">1.2k</Title>\r\n                            <Text type=\"secondary\">FOLLOWING</Text>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Tabs defaultActiveKey=\"1\" centered>\r\n                    <TabPane tab=\"About\" key=\"1\" style={{padding : 0}}>\r\n                        <About />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Followers\" key=\"2\">\r\n                        Content of Tab Pane 2\r\n                    </TabPane>\r\n                    <TabPane tab=\"Following\" key=\"3\">\r\n                        Content of Tab Pane 3\r\n                    </TabPane>\r\n                    <TabPane tab=\"My Shorts\" key=\"4\">\r\n                        Content of Tab Pane 3\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { useState } from 'react';\r\n\r\nconst useToggle = (initial?: boolean) => {\r\n    const [show, setShow] = useState<boolean>(initial || false);\r\n\r\n    function handleOpen() {\r\n        setShow(true);\r\n    }\r\n\r\n    function handleClose() {\r\n        setShow(false);\r\n    }\r\n\r\n    function handleToggle() {\r\n        setShow(prev => !prev);\r\n    }\r\n\r\n    return {\r\n        show,\r\n        handleOpen,\r\n        handleClose,\r\n        handleToggle\r\n    };\r\n\r\n};\r\n\r\nexport default useToggle;"],"sourceRoot":""}