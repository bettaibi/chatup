{"version":3,"sources":["pages/Auth/Signup/index.tsx"],"names":["Step","Steps","Title","Typography","Text","initialValues","username","email","phone","password","confirmPassword","Signup","React","useState","currentStep","setCurrentStep","nextStep","prev","previousStep","className","src","alt","level","to","name","layout","onFinish","values","console","log","onFinishFailed","errorInfo","autoComplete","size","current","direction","title","icon","Item","label","rules","required","message","type","min","max","addonBefore","shape","onClick","hasFeedback","Password","getFieldValue","validator","_","value","Promise","reject","Error","resolve","dependencies","justify","htmlType"],"mappings":"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","file":"static/js/10.aecb999c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button, Row, Col, Steps, Typography } from 'antd';\r\nimport { SmileOutlined } from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst { Step } = Steps;\r\nconst { Title, Text } = Typography;\r\n\r\nconst initialValues = {\r\n    username: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n}\r\n\r\nconst Signup = () => {\r\n    const [currentStep, setCurrentStep] = React.useState<number>(0);\r\n\r\n    const onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    function nextStep() {\r\n        setCurrentStep(prev => prev + 1);\r\n    }\r\n\r\n    function previousStep() {\r\n        setCurrentStep(prev => prev - 1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"d__flex flex__column align__item__center justify__content__center bg__gredient\">\r\n            <div className=\"container__sm\">\r\n                <div className=\"glass__blur p__16 c__radius\">\r\n                    <div className=\"mb__16\">\r\n                        <img src=\"/chatup/img/58.png\" alt=\"chatup_logo\" />\r\n                    </div>\r\n                    <div className=\"mb__16\">\r\n                        <Title level={3} className=\"m__0\">Sign up</Title>\r\n                        <Text>\r\n                          Already have an account? <Link to=\"/chatup/signin\" className=\"link\">Sign in</Link>\r\n                        </Text>\r\n                    </div>\r\n                    <Form\r\n                        name=\"singup\"\r\n                        layout=\"vertical\"\r\n                        initialValues={initialValues}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                    >\r\n\r\n                        <Steps size=\"small\" current={currentStep} direction=\"horizontal\">\r\n                            <Step title=\"User details\" />\r\n                            <Step title=\"Password\" />\r\n                            <Step title=\"Done\" icon={<SmileOutlined />} />\r\n                        </Steps>\r\n                        <br />\r\n                        {\r\n                            currentStep === 0 && (\r\n                                <>\r\n                                    <Form.Item\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                    >\r\n                                        <Input type=\"text\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: 'Please input your E-mail!' }, { type: 'email', message: 'The input is not valid E-mail!' }]}\r\n                                    >\r\n                                        <Input type=\"email\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        rules={[\r\n                                            { required: true, message: 'Please input your phone!' },\r\n                                            { min: 8, max: 8, message: 'Phone should has 8 digits' }\r\n                                        ]}\r\n                                    >\r\n                                        <Input min=\"0\" type=\"number\" addonBefore=\"+216\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button shape=\"round\" onClick={nextStep}>Next Step</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            currentStep === 1 && (\r\n                                <>\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        rules={[{ required: true, message: 'Please input your password!' }, { min: 6, message: 'Too short!' }]}\r\n                                        hasFeedback\r\n                                    >\r\n                                        <Input.Password />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Confirm Password\"\r\n                                        name=\"confirmPassword\"\r\n                                        rules={[{ required: true, message: 'Please input your password!' }, { min: 6, message: 'Too short!' },\r\n                                        ({ getFieldValue }) => ({\r\n                                            validator(_, value) {\r\n                                                if (!value || getFieldValue('password') === value) {\r\n                                                    return Promise.resolve();\r\n                                                }\r\n                                                return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                            },\r\n                                        }),]}\r\n                                        dependencies={['password']}\r\n                                        hasFeedback>\r\n                                        <Input.Password />\r\n                                    </Form.Item>\r\n\r\n                                    <Row justify='space-between'>\r\n                                        <Col>\r\n                                            <Button shape=\"round\" onClick={previousStep}>Previous Step</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button shape=\"round\" onClick={nextStep}>Next Step</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            currentStep === 2 && (\r\n                                <div>\r\n                                    <h5>Term & Condition </h5>\r\n                                    <p>\r\n                                        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Ad corporis animi hic ipsam\r\n                                        accusantium, sunt neque dolorem repellendus ratione\r\n                                        porro quo aut? Ducimus tempore incidunt quod ipsam consequatur doloremque eligendi.\r\n                                    </p>\r\n                                    <Row justify='space-between'>\r\n                                        <Col>\r\n                                            <Button shape=\"round\" onClick={previousStep}>Previous Step</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button type=\"primary\" htmlType=\"submit\" shape=\"round\">\r\n                                                Sing up\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;"],"sourceRoot":""}